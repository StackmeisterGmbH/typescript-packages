import pluralize from './pluralize'

describe('pluralize', () => {
  const testCases: [string, string][] = [
    ['quiz', 'quizzes'],
    ['ox', 'oxen'],
    ['mouse', 'mice'],
    ['matrix', 'matrices'],
    ['vertex', 'vertices'],
    ['index', 'indices'],
    ['x', 'xes'],
    ['ch', 'ches'],
    ['ss', 'sses'],
    ['sh', 'shes'],
    ['hive', 'hives'],
    ['wife', 'wives'],
    ['knife', 'knives'],
    ['leaf', 'leaves'],
    ['thief', 'thieves'],
    ['sheaf', 'sheaves'],
    ['loaf', 'loaves'],
    ['thesis', 'theses'],
    ['datum', 'data'],
    ['medium', 'media'],
    ['buffalo', 'buffaloes'],
    ['tomato', 'tomatoes'],
    ['potato', 'potatoes'],
    ['echo', 'echoes'],
    ['hero', 'heroes'],
    ['veto', 'vetoes'],
    ['bus', 'buses'],
    ['alias', 'aliases'],
    ['status', 'statuses'],
    ['octopus', 'octopi'],
    ['virus', 'viri'],
    ['axis', 'axes'],
    ['testis', 'testes'],
    ['omnibus', 'omnibuses'],
    ['word', 'words'],
    ['user', 'users'],
    ['company', 'companies'],
    ['agency', 'agencies'],
    ['city', 'cities'],
    ['movie', 'movies'],
    ['story', 'stories'],
    ['life', 'lives'],
    ['wife', 'wives'],
    ['safe', 'saves'],
    ['country', 'countries'],
    ['address', 'addresses'],
    ['case', 'cases'],
    ['stack', 'stacks'],
    ['wish', 'wishes'],
    ['fish', 'fish'],
    ['sheep', 'sheep'],
    ['fish', 'fish'],
    ['deer', 'deer'],
    ['moose', 'moose'],
    ['series', 'series'],
    ['species', 'species'],
    ['money', 'money'],
    ['rice', 'rice'],
    ['information', 'information'],
    ['equipment', 'equipment'],
    ['bison', 'bison'],
    ['cod', 'cod'],
    ['offspring', 'offspring'],
    ['pike', 'pike'],
    ['salmon', 'salmon'],
    ['shrimp', 'shrimp'],
    ['swine', 'swine'],
    ['trout', 'trout'],
    ['aircraft', 'aircraft'],
    ['hovercraft', 'hovercraft'],
    ['spacecraft', 'spacecraft'],
    ['sugar', 'sugar'],
    ['tuna', 'tuna'],
    ['you', 'you'],
    ['wood', 'wood'],
    // irregulars (full word and suffixes)
    ['person', 'people'],
    ['catperson', 'catpeople'],
    ['man', 'men'],
    ['woman', 'women'],
    ['child', 'children'],
    ['intersex', 'intersexes'],
    ['dancemove', 'dancemoves'],
    ['foot', 'feet'],
    ['goose', 'geese'],
    ['tooth', 'teeth'],
    ['sugartooth', 'sugarteeth'],
  ]

  testCases.forEach(([singular, expectedPlural]) => {
    test(`pluralRule: ${singular} -> ${expectedPlural}`, () => {
      expect(pluralize(singular)).toBe(expectedPlural)
    })
  })
})
